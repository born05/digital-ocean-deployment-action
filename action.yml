name: Deploy to DigitalOcean
description: Build docker images and push to the DigitalOcean registry

inputs:
  digital-ocean-access-token:
    description: 'The DIGITALOCEAN_API_TOKEN secret'
    required: true
  gsap-npm-token:
    description: 'The GSAP_NPM_TOKEN secret'
    required: true
  gh-registry-packages:
    description: 'The GH_REGISTRY_PACKAGES secret'
    required: true
  node-version:
    description: 'The node version to install the node modules with'
    required: false
    default: 21.x
  cms:
    description: 'Wether or not the project contains a CMS'
    required: false

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3
    - uses: digitalocean/action-doctl@v2
      with:
        token: ${{ inputs.digital-ocean-access-token }}
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version || '21.x' }}
        cache: "npm"
        cache-dependency-path: "./app/package-lock.json"

    - name: login to digitalocean registry
      shell: bash
      run: doctl registry login

    - name: Build app
      shell: bash
      env:
        APP_IMAGE: registry.digitalocean.com/${{ github.repository }}:app-${{ github.ref_type == 'tag' && github.ref_name || 'latest' }}
        GSAP_NPM_TOKEN: ${{ inputs.gsap-npm-token }}
        GITHUB_TOKEN: ${{ inputs.gh-registry-packages }}
      run: |
        npm ci --include=dev --prefix ./app
        npm run build --prefix ./app
        npm prune --omit=dev --prefix ./app
        docker build -t $APP_IMAGE ./app
        docker push $APP_IMAGE

    - name: Build cms
      if: ${{ inputs.cms }}
      shell: bash
      env:
        CMS_IMAGE: registry.digitalocean.com/${{ github.repository }}:cms-${{ github.ref_type == 'tag' && github.ref_name || 'latest' }}
      run: |
        docker build -t $CMS_IMAGE ./cms
        docker push $CMS_IMAGE

    - name: Build cms-cli
      if: ${{ inputs.cms }}
      shell: bash
      env:
        CMS_CLI_IMAGE: registry.digitalocean.com/${{ github.repository }}:cms-cli-${{ github.ref_type == 'tag' && github.ref_name || 'latest' }}
      run: |
        docker build -f ./cms/cli.Dockerfile -t $CMS_CLI_IMAGE ./cms
        docker push $CMS_CLI_IMAGE

    - name: Update DigitalOcean App tags
      if: github.ref_type == 'tag'
      shell: bash
      run: |
        repository=$(echo ${{ github.repository }} | sed -E "s/born05\///")-prd
        app_id=$(doctl apps list | grep $repository | awk '{print $1}')
        doctl apps spec get $app_id | sed -E "/tag: (cms|cms-cli|app)/ s/[0-9]+.[0-9]+.[0-9]+/${{ github.ref_name }}/" | sed -E "/key: VERSION$/,+2 s/value: .*/value: ${{ github.ref_name }}/" | doctl apps update $app_id --spec=-
    
    - name: Create new deployment
      if: github.ref_name == 'main' || github.ref_name == 'master'
      shell: bash
      run: |
        repository=$(echo ${{ github.repository }} | sed -E "s/born05\///")-acc
        app_id=$(doctl apps list | grep $repository | awk '{print $1}')
        doctl apps create-deployment $app_id